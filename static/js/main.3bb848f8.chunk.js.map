{"version":3,"sources":["assets/yeji.jpg","Components/Header/Header.js","Components/Header/index.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","span","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","Loader_templateObject","Timer","Loader_templateObject2","boxBigger","keyframes","Loader_templateObject3","MovingBox","Loader_templateObject4","Loading","Loader_Container","Message_templateObject","Text","Message_templateObject2","color","Message","text","Message_Container","prototype","propTypes","string","isRequired","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","Poster_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imgUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","concat","Poster_Container","require","role","aria-label","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","upcoming","popular","error","loading","Fragment","Helmet_default","Loader","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","movieApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","TVApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updatedTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","movieResults","tvResults","event","preventDefault","_this","searchByTerm","target","console","log","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h1","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","ProsTypes","object","bool","detailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedID","parseInt","isNaN","request","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,g+BCIxC,IAAMC,EAASC,UAAOC,OAAVC,KAcNC,EAAOH,UAAOI,GAAVC,KAIJC,EAAON,UAAOO,GAAVC,IAMJ,SAAAC,GAAK,OAAKA,EAAMC,QAAU,UAAY,gBAGtCC,EAAQX,kBAAOY,IAAPZ,CAAHa,KC7BId,EDoCAe,YAAW,SAAAC,GAAA,IAAeC,EAAfD,EAAGE,SAAYD,SAAf,OAGxBE,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,MAAbM,GACbE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,KAAV,WAEFH,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,QAAbM,GACbE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,OAAV,OAEFH,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,YAAbM,GACbE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,WAAV,ycE5CR,IAAMC,EAAYtB,UAAOuB,IAAVC,KAKTC,EAAQzB,UAAO0B,KAAVC,KAILC,EAAO5B,UAAOuB,IAAVM,KAsBKC,EAfC,SAAAf,GAAA,IAAGgB,EAAHhB,EAAGgB,MAAOC,EAAVjB,EAAUiB,SAAV,OACdd,EAAAC,EAAAC,cAACE,EAAD,KACEJ,EAAAC,EAAAC,cAACK,EAAD,KAAQM,GACRb,EAAAC,EAAAC,cAACQ,EAAD,KAAOI,q7BCtBX,IAAMV,EAAYtB,UAAOuB,IAAVU,KAETC,EAAQlC,UAAOuB,IAAVY,KAQLC,EAAYC,oBAAHC,KAeTC,EAAYvC,UAAOuB,IAAViB,IAKGJ,GA+BHK,EAZC,kBACdvB,EAAAC,EAAAC,cAACsB,EAAD,KACExB,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,uPCvDN,IAAMjB,EAAYtB,UAAOuB,IAAVoB,KAOTC,EAAO5C,UAAO0B,KAAVmB,IACC,SAAApC,GAAK,OAAIA,EAAMqC,QAGpBC,EAAU,SAAAhC,GAAA,IAAGiC,EAAHjC,EAAGiC,KAAMF,EAAT/B,EAAS+B,MAAT,OACd5B,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAACwB,EAAD,CAAME,MAAOA,GAAb,IAAsBE,GAAa,MAIvCD,EAAQG,UAAY,CAClBF,KAAMG,IAAUC,OAAOC,WACvBP,MAAOK,IAAUC,OAAOC,YAGXN,0jCCrBf,IAAMzB,GAAYtB,UAAOuB,IAAV+B,MAITC,GAAQvD,UAAOuB,IAAViC,KACe,SAAA/C,GAAK,OAAIA,EAAMgD,QASnCC,GAAS1D,UAAO0B,KAAViC,MAONC,GAAiB5D,UAAOuB,IAAVsC,KAIdN,GAGAG,IAOAjC,GAAQzB,UAAO0B,KAAVoC,KAKLC,GAAO/D,UAAO0B,KAAVsC,KAyCKC,GApCA,SAAAlD,GAAA,IAAGmD,EAAHnD,EAAGmD,GAAIC,EAAPpD,EAAOoD,OAAQpC,EAAfhB,EAAegB,MAAOqC,EAAtBrD,EAAsBqD,OAAQC,EAA9BtD,EAA8BsD,KAA9BC,EAAAvD,EAAoCwD,eAApC,IAAAD,KAAA,OACbpD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAMnD,GAAIkD,EAAO,UAAAE,OAAaP,GAAb,SAAAO,OAA6BP,IAE5ChD,EAAAC,EAAAC,cAACsD,GAAD,KACExD,EAAAC,EAAAC,cAACwC,GAAD,KACE1C,EAAAC,EAAAC,cAACmC,GAAD,CACEE,MACEU,EAAM,kCAAAM,OACgCN,GAClCQ,EAAQ,MAGhBzD,EAAAC,EAAAC,cAACsC,GAAD,KACExC,EAAAC,EAAAC,cAAA,QAAMwD,KAAK,MAAMC,aAAW,UAA5B,gBAEQ,IACPT,EAJH,QAOFlD,EAAAC,EAAAC,cAAC0D,GAAD,KACG/C,EAAMgD,OAAS,GAAf,GAAAN,OAAuB1C,EAAMiD,UAAU,EAAG,IAA1C,OAAqDjD,GAExDb,EAAAC,EAAAC,cAAC2C,GAAD,KAAOM,qHC/Db,IAAM/C,GAAYtB,UAAOuB,IAAV0D,MA2EAC,GAvEO,SAAAnE,GAAA,IAAGoE,EAAHpE,EAAGoE,WAAYC,EAAfrE,EAAeqE,SAAUC,EAAzBtE,EAAyBsE,QAASC,EAAlCvE,EAAkCuE,MAAOC,EAAzCxE,EAAyCwE,QAAzC,OACpBrE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqE,SAAA,KACEtE,EAAAC,EAAAC,cAACqE,GAAAtE,EAAD,KACED,EAAAC,EAAAC,cAAA,oCAEDmE,EACCrE,EAAAC,EAAAC,cAACsE,EAAD,MAEAxE,EAAAC,EAAAC,cAACuE,GAAD,KACGR,GAAcA,EAAWJ,OAAS,GACjC7D,EAAAC,EAAAC,cAACwE,EAAD,CAAS7D,MAAM,eACZoD,EAAWU,IAAI,SAAAC,GAAK,OACnB5E,EAAAC,EAAAC,cAAC2E,GAAD,CACEC,IAAKF,EAAM5B,GACXA,GAAI4B,EAAM5B,GACVC,OAAQ2B,EAAMG,YACdlE,MAAO+D,EAAMI,eACb9B,OAAQ0B,EAAMK,aACd9B,KAAMyB,EAAMM,cAAgBN,EAAMM,aAAapB,UAAU,EAAG,GAC5DT,SAAS,OAOhBa,GAAYA,EAASL,OAAS,GAC7B7D,EAAAC,EAAAC,cAACwE,EAAD,CAAS7D,MAAM,YACZqD,EAASS,IAAI,SAAAC,GAAK,OACjB5E,EAAAC,EAAAC,cAAC2E,GAAD,CACEC,IAAKF,EAAM5B,GACXA,GAAI4B,EAAM5B,GACVC,OAAQ2B,EAAMG,YACdlE,MAAO+D,EAAMI,eACb9B,OAAQ0B,EAAMK,aACd9B,KAAMyB,EAAMM,cAAgBN,EAAMM,aAAapB,UAAU,EAAG,GAC5DT,SAAS,OAKhBc,GAAWA,EAAQN,OAAS,GAC3B7D,EAAAC,EAAAC,cAACwE,EAAD,CAAS7D,MAAM,WACZsD,EAAQQ,IAAI,SAAAC,GAAK,OAChB5E,EAAAC,EAAAC,cAAC2E,GAAD,CACEC,IAAKF,EAAM5B,GACXA,GAAI4B,EAAM5B,GACVC,OAAQ2B,EAAMG,YACdlE,MAAO+D,EAAMI,eACb9B,OAAQ0B,EAAMK,aACd9B,KAAMyB,EAAMM,cAAgBN,EAAMM,aAAapB,UAAU,EAAG,GAC5DT,SAAS,OAKhBe,GAASpE,EAAAC,EAAAC,cAACiF,EAAD,CAASrD,KAAMsC,EAAOxC,MAAM,oBCnExCwD,WAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,GAAW,CACtB1B,WAAY,kBAAMmB,GAAIQ,IAAI,sBAC1B1B,SAAU,kBAAMkB,GAAIQ,IAAI,mBACxBzB,QAAS,kBAAMiB,GAAIQ,IAAI,kBACvBC,YAAa,SAAA7C,GAAE,OACboC,GAAIQ,IAAJ,SAAArC,OAAiBP,GAAM,CACrBwC,OAAQ,CACNM,mBAAoB,aAG1BC,OAAQ,SAAAC,GAAI,OACVZ,GAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CACNS,MAAOC,mBAAmBF,QAKrBG,GAAQ,CACnBC,SAAU,kBAAMhB,GAAIQ,IAAI,iBACxBS,YAAa,kBAAMjB,GAAIQ,IAAI,oBAC3BzB,QAAS,kBAAMiB,GAAIQ,IAAI,eACvBU,WAAY,SAAAtD,GAAE,OACZoC,GAAIQ,IAAJ,MAAArC,OAAcP,GAAM,CAClBwC,OAAQ,CACNM,mBAAoB,aAG1BC,OAAQ,SAAAC,GAAI,OACVZ,GAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNS,MAAOC,mBAAmBF,QCvCnBO,8MCGbC,MAAQ,CACNvC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAS,uOAQGsB,GAAS1B,oCADAA,IAAjBwC,KAAQC,iBAKAf,GAASzB,kCADAA,IAAjBuC,KAAQC,kBAKAf,GAASxB,2BADAA,IAAjBsC,KAAQC,QAGVC,KAAKC,SAAS,CACZ3C,aACAC,WACAC,8DAGFwC,KAAKC,SAAS,CACZxC,MAAO,2DAGTuC,KAAKC,SAAS,CACZvC,SAAS,oKAKN,IAAAwC,EACmDF,KAAKH,MAAvDvC,EADD4C,EACC5C,WAAYC,EADb2C,EACa3C,SAAUC,EADvB0C,EACuB1C,QAASC,EADhCyC,EACgCzC,MAAOC,EADvCwC,EACuCxC,QAE9C,OACErE,EAAAC,EAAAC,cAAC4G,GAAD,CACE7C,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,MAAOA,EACPC,QAASA,WAjDY0C,IAAMC,sGCKnC,IAAM5G,GAAYtB,UAAOuB,IAAV4G,MAiFAC,GA7EK,SAAArH,GAAA,IAAGuG,EAAHvG,EAAGuG,SAAUC,EAAbxG,EAAawG,YAAalC,EAA1BtE,EAA0BsE,QAASC,EAAnCvE,EAAmCuE,MAAOC,EAA1CxE,EAA0CwE,QAA1C,OAClBrE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqE,SAAA,KACEtE,EAAAC,EAAAC,cAACqE,GAAAtE,EAAD,KACED,EAAAC,EAAAC,cAAA,mCAEDmE,EACCrE,EAAAC,EAAAC,cAACsE,EAAD,MAEAxE,EAAAC,EAAAC,cAACiH,GAAD,KACGf,GAAYA,EAASvC,OAAS,GAC7B7D,EAAAC,EAAAC,cAACwE,EAAD,CAAS7D,MAAM,aACZuF,EAASzB,IAAI,SAAAyC,GAAI,OAChBpH,EAAAC,EAAAC,cAAC2E,GAAD,CACEC,IAAKsC,EAAKpE,GACVA,GAAIoE,EAAKpE,GACToE,MAAI,EACJnE,OAAQmE,EAAKrC,YACblE,MAAOuG,EAAKC,cACZnE,OAAQkE,EAAKnC,aACb9B,KACEiE,EAAKE,gBAAkBF,EAAKE,eAAexD,UAAU,EAAG,QAOjEuC,GAAeA,EAAYxC,OAAS,GACnC7D,EAAAC,EAAAC,cAACwE,EAAD,CAAS7D,MAAM,gBACZwF,EAAY1B,IAAI,SAAAyC,GAAI,OACnBpH,EAAAC,EAAAC,cAAC2E,GAAD,CACEC,IAAKsC,EAAKpE,GACVA,GAAIoE,EAAKpE,GACToE,MAAI,EACJnE,OAAQmE,EAAKrC,YACblE,MAAOuG,EAAKC,cACZnE,OAAQkE,EAAKnC,aACb9B,KACEiE,EAAKE,gBAAkBF,EAAKE,eAAexD,UAAU,EAAG,QAOjEK,GAAWA,EAAQN,OAAS,GAC3B7D,EAAAC,EAAAC,cAACwE,EAAD,CAAS7D,MAAM,WACZsD,EAAQQ,IAAI,SAAAyC,GAAI,OACfpH,EAAAC,EAAAC,cAAC2E,GAAD,CACEC,IAAKsC,EAAKpE,GACVA,GAAIoE,EAAKpE,GACToE,MAAI,EACJnE,OAAQmE,EAAKrC,YACblE,MAAOuG,EAAKC,cACZnE,OAAQkE,EAAKnC,aACb9B,KACEiE,EAAKE,gBAAkBF,EAAKE,eAAexD,UAAU,EAAG,QAMjEM,GAASpE,EAAAC,EAAAC,cAACiF,EAAD,CAASrD,KAAMsC,EAAOxC,MAAM,WCzE/B2F,8MCGbf,MAAQ,CACNJ,SAAU,KACVC,YAAa,KACblC,QAAS,KACTC,MAAO,KACPC,SAAS,uOAQG8B,GAAMC,kCADGA,IAAjBK,KAAQC,iBAKAP,GAAME,qCADGA,IAAjBI,KAAQC,kBAKAP,GAAMhC,2BADGA,IAAjBsC,KAAQC,QAEVC,KAAKC,SAAS,CACZR,WACAC,cACAlC,8DAGFwC,KAAKC,SAAS,CACZxC,MAAO,wDAGTuC,KAAKC,SAAS,CACZvC,SAAS,oKAKN,IAAAwC,EACoDF,KAAKH,MAAxDJ,EADDS,EACCT,SAAUC,EADXQ,EACWR,YAAalC,EADxB0C,EACwB1C,QAASC,EADjCyC,EACiCzC,MAAOC,EADxCwC,EACwCxC,QAE/C,OACErE,EAAAC,EAAAC,cAACsH,GAAD,CACEpB,SAAUA,EACVC,YAAaA,EACblC,QAASA,EACTC,MAAOA,EACPC,QAASA,WAhDY0C,IAAMC,yVCKnC,IAAM5G,GAAYtB,UAAOuB,IAAVoH,MAITC,GAAO5I,UAAO6I,KAAVC,MAKJC,GAAQ/I,UAAOgJ,MAAVC,MA6FIC,GAvFS,SAAAnI,GAAA,IACtBoI,EADsBpI,EACtBoI,YACAC,EAFsBrI,EAEtBqI,SACAC,EAHsBtI,EAGtBsI,WACAC,EAJsBvI,EAItBuI,aACAC,EALsBxI,EAKtBwI,YACAjE,EANsBvE,EAMtBuE,MACAC,EAPsBxE,EAOtBwE,QAPsB,OAStBrE,EAAAC,EAAAC,cAACoI,GAAD,KACEtI,EAAAC,EAAAC,cAACqE,GAAAtE,EAAD,KACED,EAAAC,EAAAC,cAAA,oCAEFF,EAAAC,EAAAC,cAACwH,GAAD,CAAMa,SAAUH,GAEdpI,EAAAC,EAAAC,cAAC2H,GAAD,CACEW,YAAY,4BACZC,MAAON,EACPO,SAAUL,KASbhE,EACCrE,EAAAC,EAAAC,cAACsE,EAAD,MAEAxE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqE,SAAA,KAEG2D,GAAeA,EAAYpE,OAAS,GACnC7D,EAAAC,EAAAC,cAACwE,EAAD,CAAS7D,MAAM,iBACZoH,EAAYtD,IAAI,SAAAC,GAAK,OACpB5E,EAAAC,EAAAC,cAAC2E,GAAD,CACEC,IAAKF,EAAM5B,GACXA,GAAI4B,EAAM5B,GACVC,OAAQ2B,EAAMG,YACdlE,MAAO+D,EAAMI,eACb9B,OAAQ0B,EAAMK,aACd9B,KAAMyB,EAAMM,cAAgBN,EAAMM,aAAapB,UAAU,EAAG,QAMnEoE,GAAYA,EAASrE,OAAS,GAC7B7D,EAAAC,EAAAC,cAACwE,EAAD,CAAS7D,MAAM,cACZqH,EAASvD,IAAI,SAAAyC,GAAI,OAChBpH,EAAAC,EAAAC,cAAC2E,GAAD,CACEC,IAAKsC,EAAKpE,GACVA,GAAIoE,EAAKpE,GACToE,MAAI,EACJnE,OAAQmE,EAAKrC,YACblE,MAAOuG,EAAKC,cACZnE,OAAQkE,EAAKnC,aACb9B,KACEiE,EAAKE,gBAAkBF,EAAKE,eAAexD,UAAU,EAAG,QAMjEM,GAASpE,EAAAC,EAAAC,cAACiF,EAAD,CAASrD,KAAMsC,EAAOxC,MAAM,QACrCsG,GACCD,GACoB,IAApBC,EAASrE,QACc,IAAvBoE,EAAYpE,QACV7D,EAAAC,EAAAC,cAACiF,EAAD,CAASrD,KAAK,gBAAgBF,MAAM,YC3FjC+G,8MCGbnC,MAAQ,CACNoC,aAAc,KACdC,UAAW,KACXV,WAAY,GACZ/D,MAAO,KACPC,SAAS,KAGX+D,aAAe,SAAAU,GACbA,EAAMC,iBAEa,KADIC,EAAKxC,MAApB2B,YAENa,EAAKC,kBAITZ,YAAc,SAAAS,GAAS,IAETL,EACRK,EADFI,OAAUT,MAEZU,QAAQC,IAAIX,GACZO,EAAKpC,SAAS,CAEZuB,WAAYM,OAIhBQ,kCAAe,SAAAI,IAAA,IAAAlB,EAAAmB,EAAAV,EAAAW,EAAAV,EAAA,OAAAW,EAAAvJ,EAAAwJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLzB,EAAea,EAAKxC,MAApB2B,WACRa,EAAKpC,SAAS,CAAEvC,SAAS,IAFZqF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMDjE,GAASI,OAAOoC,GANf,cAAAmB,EAAAI,EAAAG,KAKQjB,EALRU,EAKT7C,KAAQC,QALCgD,EAAAE,KAAA,EAUDzD,GAAMJ,OAAOoC,GAVZ,OAAAoB,EAAAG,EAAAG,KASQhB,EATRU,EAST9C,KAAQC,QAEVsC,EAAKpC,SAAS,CAAEgC,eAAcC,cAXnBa,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAaXV,EAAKpC,SAAS,CAAExC,MAAO,uBAbZ,eAAAsF,EAAAC,KAAA,GAeXX,EAAKpC,SAAS,CAAEvC,SAAS,IAfdqF,EAAAK,OAAA,6BAAAL,EAAAM,SAAAX,EAAA,gGAmBN,IAAAxC,EACyDF,KAAKH,MAA7DoC,EADD/B,EACC+B,aAAcC,EADfhC,EACegC,UAAWV,EAD1BtB,EAC0BsB,WAAY/D,EADtCyC,EACsCzC,MAAOC,EAD7CwC,EAC6CxC,QAEpD,OACErE,EAAAC,EAAAC,cAAC+J,GAAD,CACEhC,YAAaW,EACbV,SAAUW,EACVV,WAAYA,EACZ/D,MAAOA,EACPC,QAASA,EACT+D,aAAczB,KAAKyB,aACnBC,YAAa1B,KAAK0B,qBA1DGtB,IAAMC,qoDCEnC,IAAM5G,GAAYtB,UAAOuB,IAAV6J,MASTC,GAAWrL,UAAOuB,IAAV+J,KAMY,SAAA7K,GAAK,OAAIA,EAAM8K,UAQnCC,GAAUxL,UAAOuB,IAAVkK,MASPC,GAAQ1L,UAAOuB,IAAVoK,KAGe,SAAAlL,GAAK,OAAIA,EAAM8K,UAOnCK,GAAO5L,UAAOuB,IAAVsK,MAMJpK,GAAQzB,UAAO8L,GAAVC,MAKLC,GAAgBhM,UAAOuB,IAAV0K,MAIb3L,GAAON,UAAO0B,KAAVwK,MAEJC,GAAUnM,UAAO0B,KAAV0K,MAIPC,GAAWrM,UAAOF,EAAVwM,MAQRC,GAAkB,SAAAxL,GAAA,IAAGyL,EAAHzL,EAAGyL,OAAHzL,EAAWuE,MAAX,OAAAvE,EAAkBwE,QAEtCrE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqE,SAAA,KACEtE,EAAAC,EAAAC,cAACqE,GAAAtE,EAAD,KACED,EAAAC,EAAAC,cAAA,qCAEFF,EAAAC,EAAAC,cAACsE,EAAD,OAGFxE,EAAAC,EAAAC,cAACqL,GAAD,KACEvL,EAAAC,EAAAC,cAACqE,GAAAtE,EAAD,KACED,EAAAC,EAAAC,cAAA,aACGoL,EAAOtG,eAAiBsG,EAAOtG,eAAiBsG,EAAOjE,cAD1D,kBAKFrH,EAAAC,EAAAC,cAACiK,GAAD,CACEE,QAAO,sCAAA9G,OAAwC+H,EAAOE,iBAExDxL,EAAAC,EAAAC,cAACoK,GAAD,KACEtK,EAAAC,EAAAC,cAACsK,GAAD,CACEH,QACEiB,EAAOvG,YAAP,sCAAAxB,OAC0C+H,EAAOvG,aAC7CtB,EAAQ,MAGhBzD,EAAAC,EAAAC,cAACwK,GAAD,KACE1K,EAAAC,EAAAC,cAACuL,GAAD,KACGH,EAAOtG,eACJsG,EAAOtG,eACPsG,EAAOjE,eAEbrH,EAAAC,EAAAC,cAAC4K,GAAD,KACE9K,EAAAC,EAAAC,cAACwL,GAAD,KACGJ,EAAOpG,aACJoG,EAAOpG,aAAapB,UAAU,EAAG,GACjCwH,EAAOhE,eAAexD,UAAU,EAAG,IAEzC9D,EAAAC,EAAAC,cAAC+K,GAAD,UACAjL,EAAAC,EAAAC,cAACwL,GAAD,KACGJ,EAAOK,QAAP,GAAApI,OACM+H,EAAOK,QADb,WAAApI,OAEM+H,EAAOM,iBAFb,SAIH5L,EAAAC,EAAAC,cAAC+K,GAAD,UACAjL,EAAAC,EAAAC,cAACwL,GAAD,KACGJ,EAAOO,QACNP,EAAOO,OAAOlH,IAAI,SAACmH,EAAOC,GAAR,OAChBA,IAAUT,EAAOO,OAAOhI,OAAS,EAC7BiI,EAAME,KADV,GAAAzI,OAEOuI,EAAME,KAFb,WAORhM,EAAAC,EAAAC,cAACiL,GAAD,KAAWG,EAAOW,cAM5BZ,GAAgBa,UAAY,CAE1BxF,QAASwF,IAAUC,OACnB/H,MAAO8H,IAAUE,KAAKjK,WACtBkC,QAAS6H,IAAUhK,QAGNmJ,UChJAgB,eCGb,SAAAC,EAAY/M,GAAO,IAAAyJ,EAAAuD,OAAAC,EAAA,EAAAD,CAAA5F,KAAA2F,GACjBtD,EAAAuD,OAAAE,EAAA,EAAAF,CAAA5F,KAAA4F,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhG,KAAMpH,IADW,IAGHO,EAGVP,EAHFQ,SAAYD,SAHG,OAOjBkJ,EAAKxC,MAAQ,CACX8E,OAAQ,KACRlH,MAAO,KACPC,SAAS,EACThB,QAASvD,EAAS8M,SAAS,YAXZ5D,oNAsBbrC,KAAKpH,MAJKyD,IADZ6J,MACErH,OAAUxC,GAED8J,IAAXC,QAAWD,OACX/M,SAAYD,SAGNuD,EAAYsD,KAAKH,MAAjBnD,QAEF2J,EAAWC,SAASjK,IAEtBkK,MAAMF,4CACDF,EAAK,gBAGVxB,EAAS,eAGPjI,oCACoBsC,GAASE,YAAYmH,WAArCG,SACN7B,EAAS6B,EAAQ1G,8CAGKN,GAAMG,WAAW0G,WAAjCG,SACN7B,EAAS6B,EAAQ1G,aAEnB0C,QAAQC,IAAIkC,qDAEZ3E,KAAKC,SAAS,CAAExC,MAAO,kDAEvBuC,KAAKC,SAAS,CAAEvC,SAAS,EAAOiH,2KAI3B,IAAAzE,EAC4BF,KAAKH,MAAhC8E,EADDzE,EACCyE,OAAQlH,EADTyC,EACSzC,MAAOC,EADhBwC,EACgBxC,QACvB,OAAOrE,EAAAC,EAAAC,cAACkN,GAAD,CAAiB9B,OAAQA,EAAQlH,MAAOA,EAAOC,QAASA,WAtDtC0C,IAAMC,WCSpBqG,GAAA,kBACbrN,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACEtD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqE,SAAA,KACEtE,EAAAC,EAAAC,cAACoN,EAAD,MACAtN,EAAAC,EAAAC,cAACqN,EAAA,EAAD,KACEvN,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,KAAK,0DAA0DC,OAAK,EAACC,UAAWC,KACvF3N,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,KAAK,4DAA4DC,OAAK,EAACC,UAAWE,KACzF5N,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,KAAK,gEAAgEC,OAAK,EAACC,UAAWG,KAC7F7N,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,KAAK,mEAAmEE,UAAWI,KAC1F9N,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,KAAK,kEAAkEE,UAAWI,KACzF9N,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAUQ,KAAK,IAAI5N,GAAG,qgBCpB9B,IAmBe6N,GAnBMC,4BAAHC,KACZC,MCiBSC,oLAZX,OACEpO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqE,SAAA,KACEtE,EAAAC,EAAAC,cAACmN,GAAD,MACArN,EAAAC,EAAAC,cAACmO,GAAD,cALUrH,aCHlBsH,IAASC,OAAOvO,EAAAC,EAAAC,cAACsO,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.3bb848f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yeji.17711999.jpg\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  transition: border-bottom 0.5s ease-in-out;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  // 다른컴포넌트가 안에있는 with Router를 export하는것\r\n  // withRouter를 놨기때문에 props 접근이 가능\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n//Styled Component\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  children: propTypes.oneOfType([\r\n    propTypes.arrayOf(propTypes.node),\r\n    propTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Timer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst boxBigger = keyframes`\r\n  0% {\r\n    transform: none;\r\n  }\r\n  20% {\r\n    transform: scale(1, 2);\r\n  }\r\n  50% {\r\n    transform: none;\r\n  }\r\n  100% {\r\n    transform: none;\r\n  }\r\n`;\r\n\r\nconst MovingBox = styled.div`\r\n  width: 5px;\r\n  height: 30px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n  margin: 3px;\r\n  animation: 1s ${boxBigger} infinite ease-in-out;\r\n\r\n  &:nth-child(1) {\r\n    animation-delay: 0.1s;\r\n  }\r\n  &:nth-child(2) {\r\n    animation-delay: 0.2s;\r\n  }\r\n  &:nth-child(3) {\r\n    animation-delay: 0.3s;\r\n  }\r\n  &:nth-child(4) {\r\n    animation-delay: 0.4s;\r\n  }\r\n  &:nth-child(5) {\r\n    animation-delay: 0.5s;\r\n  }\r\n`;\r\n\r\nconst Loading = () => (\r\n  <Container>\r\n    <Timer>\r\n      <MovingBox />\r\n      <MovingBox />\r\n      <MovingBox />\r\n      <MovingBox />\r\n      <MovingBox />\r\n    </Timer>\r\n  </Container>\r\n);\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}> {text}</Text>{\" \"}\r\n  </Container>\r\n);\r\n\r\nMessage.prototype = {\r\n  text: propTypes.string.isRequired,\r\n  color: propTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  /* 이걸해야지 딱 박스 사이즈에 맞게 이미지 줄여줌 */\r\n  border-radius: 4px;\r\n  transition: opacity 0.3s linear;\r\n  background-position: center center;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: -5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 0.6;\r\n    }\r\n  }\r\n`;\r\n// Image랑 Rating이 더위에 선언이 되어야 실행된다!!\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imgUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    {/* 무비랑 쇼 링크 구분 */}\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imgUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imgUrl}`\r\n              : require(\"../assets/yeji.jpg\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            🍅\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 20 ? `${title.substring(0, 20)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: propTypes.number.isRequired,\r\n  imageUrl: propTypes.string,\r\n  title: propTypes.string.isRequired,\r\n  rating: propTypes.number,\r\n  year: propTypes.string,\r\n  isMovie: propTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Steveflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imgUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n                // null될때 방지\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {/* 트리플 체크 필요!, children은 title처럼 주지않고 태그사이의 값을 받음 */}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imgUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imgUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"red\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  // props의 자료형 정해줌\r\n  nowPlaying: propTypes.array,\r\n  upcoming: propTypes.array,\r\n  popular: propTypes.array,\r\n  error: propTypes.bool.isRequired,\r\n  loading: propTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"a1093d024b297a718e88b5a7b969aac8\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term) // URI로 인코딩필요\r\n      }\r\n    })\r\n};\r\n\r\nexport const TVApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term) // URI로 인코딩필요\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // 컴포넌트 실행끝낼때\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await movieApi.nowPlaying(); // 리스폰스 기다려줘!\r\n\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await movieApi.upcoming();\r\n\r\n      const {\r\n        data: { results: popular }\r\n      } = await movieApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      }); // State에 넣어줌\r\n    } catch {\r\n      this.setState({\r\n        error: \"can't find movies infomation.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false // 에러가 나든 무비가 나오든\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Shows | Steveflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated\">\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                show\r\n                imgUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n                // null될때 방지\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                show\r\n                imgUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n                // null될때 방지\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                show\r\n                imgUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"red\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  // props의 자료형 정해줌\r\n  topRated: propTypes.array,\r\n  airingToday: propTypes.array,\r\n  popular: propTypes.array,\r\n  error: propTypes.bool.isRequired,\r\n  loading: propTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { TVApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    airingToday: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // 컴포넌트 실행끝낼때\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await TVApi.topRated(); // 리스폰스 기다려줘!\r\n\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await TVApi.airingToday();\r\n\r\n      const {\r\n        data: { results: popular }\r\n      } = await TVApi.popular();\r\n      this.setState({\r\n        topRated,\r\n        airingToday,\r\n        popular\r\n      }); // State에 넣어줌\r\n    } catch {\r\n      this.setState({\r\n        error: \"can't find TVs infomation.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false // 에러가 나든 무비가 나오든\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, airingToday, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100vw;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 15px;\r\n  width: 100vw;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResult,\r\n  tvResult,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updatedTerm,\r\n  error,\r\n  loading\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Steveflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      {/* SearchContainer안에 있는 서브밋, searchTerm에 넣어주면 찾음 */}\r\n      <Input\r\n        placeholder=\"Search Movies or Tv Shows\"\r\n        value={searchTerm}\r\n        onChange={updatedTerm}\r\n      />\r\n      {/* handleSubmit안에 searchTerm에 담아주면 SearchContainer\r\n        가 States에 넣고 다시 SearchPresenter로 전달해줌 \r\n        Input안에 value로 해놔서 추적가능함 */}\r\n      {/*\r\n        onChange로 해놓은 업데이트 함수에 SyntheticEvent계속 들어감\r\n        */}\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {/* movie show 여러 부류 검색결과가 리턴되니 fragment필요 */}\r\n        {movieResult && movieResult.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResult.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imgUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                // null될때 방지\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResult && tvResult.length > 0 && (\r\n          <Section title=\"TV Results\">\r\n            {tvResult.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                show\r\n                imgUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"red\" />}\r\n        {tvResult &&\r\n          movieResult &&\r\n          tvResult.length === 0 &&\r\n          movieResult.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"grey\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  // props의 자료형 정해줌propTypes\r\n  movieResult: propTypes.array,\r\n  tvResult: propTypes.array,\r\n  searchTerm: propTypes.string,\r\n  handleSubmit: propTypes.func.isRequired,\r\n  loading: propTypes.bool.isRequired,\r\n  error: propTypes.string,\r\n  updatedTerm: propTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, TVApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false // 디폴트로 아무것도 로딩 안함! 검색기다림\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault(); // 엔터를 쳐도 자동으로 submit&초기화안됨\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updatedTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({\r\n      // 이거해야 한글자가아니라 Presenter에서 여러글자 value로 쌓여감\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await movieApi.search(searchTerm);\r\n\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await TVApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"can't find results\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResult={movieResults}\r\n        tvResult={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updatedTerm={this.updatedTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ProsTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  /* 네비게이션 바 만큼 계산해줌 */\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\n// 이미지 블러효과를 위해서\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.3;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relateive;\r\n  transition: all 0.5s ease-in-out;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  z-index: 5;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50;\r\n  text-align: justify;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Steveflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}\r\n          } | Steveflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/yeji.jpg\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>.</Divider>\r\n            <Item>\r\n              {result.runtime\r\n                ? `${result.runtime} min`\r\n                : `${result.episode_run_time} min`}\r\n            </Item>\r\n            <Divider>.</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n              {/* 마지막 부분은 /안쓰이게 map은 index를가진다!! */}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.ProsTypes = {\r\n  // props의 자료형 정해줌\r\n  results: ProsTypes.object,\r\n  error: ProsTypes.bool.isRequired,\r\n  loading: ProsTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import detailContainer from \"./DetailContainer\";\r\n\r\nexport default detailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi, TVApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n      // 생성자클래스라서\r\n      // pathname 존재하지않는다\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push },\r\n      location: { pathname }\r\n    } = this.props;\r\n\r\n    const { isMovie } = this.state; // state에 넣은 값을 가지고옴\r\n\r\n    const parsedID = parseInt(id);\r\n\r\n    if (isNaN(parsedID)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n\r\n    try {\r\n      if (isMovie) {\r\n        const request = await movieApi.movieDetail(parsedID);\r\n        result = request.data;\r\n        //const { data: result } = await movieApi.movieDetail(parsedID);\r\n      } else {\r\n        const request = await TVApi.showDetail(parsedID);\r\n        result = request.data;\r\n      }\r\n      console.log(result);\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"https://hyunjaesung.github.io/advanced-movie-app_react/\" exact component={Home} />\r\n        <Route path=\"https://hyunjaesung.github.io/advanced-movie-app_react/tv\" exact component={TV} />\r\n        <Route path=\"https://hyunjaesung.github.io/advanced-movie-app_react/search\" exact component={Search} />\r\n        <Route path=\"https://hyunjaesung.github.io/advanced-movie-app_react/movie/:id\" component={Detail} />\r\n        <Route path=\"https://hyunjaesung.github.io/advanced-movie-app_react/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n        {/* 일치하는 Route가 하나도 없다면 어느페이지든지 \"/\"  여기로 보내라 */}\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\n// index.js가 있기때문에 이렇게 써도 해당폴더가서 가져올수 있음\r\n// ./이런경로보다 이렇게써야함\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n    {\r\n      /* 리액트는 리턴 하나만 가능 -> Fragment 사용하면 내가원하는만큼 리턴가능 */\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}